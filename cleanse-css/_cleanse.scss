/*! Cleanse CSS. See SCSS file for documentation. */


@mixin calc($property, $expression) {
    #{$property}: calc(#{$expression});
}


/* 'Globals': */
$ui-color--base: $fallback--base-ui-color !default;
$ui-color--font: $fallback--base-text-color !default;

$monospace-font-family: monospace !default;



/* Elements: */

$anchor-text-decoration: none !default;



$fieldset-border-size: 1px !default;
$fieldset-border: $fieldset-border-size solid #c0c0c0 !default;
//$fieldset-padding: ($fallback--base-line-height - ($fieldset-border-size * 2)) / 16px * 1rem;
$fieldset-padding: $fallback--base-line-height;

$form-element-background-color: $fallback--base-ui-color !default;
//$form-element-background-color: transparent !default;
$form-element-min-height: 1rem !default;


$form-button-h-padding: 6px !default;
$form-button-radius: 3px !default;
$form-button-color: #fff !default;
//$form-button-color: inherit !default;







$h1-font-size: 42px / $fallback--base-font-size * 1em;
$h1-height:  $fallback--base-rem-space-unit * 3;
$h1-font-variant: normal;

$h2-font-size: 30px / $fallback--base-font-size * 1em;
$h2-height:  $fallback--base-rem-space-unit * 1.5;
$h2-font-variant: normal;

$h3-font-size: 24px / $fallback--base-font-size * 1em;
$h3-height:  $fallback--base-rem-space-unit * 1.5;
$h3-font-variant: normal;

$h4-font-size: 18px / $fallback--base-font-size * 1em;
$h4-height:  $fallback--base-rem-space-unit;
$h4-font-variant: normal;

$h5-font-size: 15px / $fallback--base-font-size * 1em;
$h5-height:  $fallback--base-rem-space-unit;
$h5-font-variant: normal;

$h6-font-size: 14px / $fallback--base-font-size * 1em;
$h6-height:  $fallback--base-rem-space-unit;
$h6-font-variant: small-caps;

$hr-border-size: 1px !default;
$hr-border: $fieldset-border-size solid #c0c0c0 !default;
$hr-margin: ($fallback--base-line-height - $hr-border-size) / 16px * 1rem;



$media-element-vertical-align: middle !default;



$pre-background-color: lighten($ui-color--base, 20%);

$small-font-size: 75% !default;



$table-border-size: 1px !default;
$table-border: $table-border-size solid #c0c0c0 !default;
$table-cell-padding: $fallback--base-rem-space-unit / 2;
$table-caption-background-color: $ui-color--base !default;
$table-caption-font-color: $ui-color--font !default;
$table-caption-padding: $table-cell-padding !default;

$textarea-resize: vertical !default;




$video-background-color: #333;
// Attempt to organise 'normalisation' by tag.
// All elements are listed, but elements that are non-visual or obselete are commented out, as are
// elements where no styles are applied.
//
// KEY:
// !     = non-visual element
// --x-- = obselete / deprecated element
// ^     = 'defined above'


// Normalise, Sanitise, A bit of Reset, Scut and Inuit, plus some other opinionated styless.

// Key:
// NX = Normalise reference
// IX = Inuit reference
// S  = Sanitize
// Sc = Scut
// H  = HTML5BP

/*------------------------------------------------------------------------------------------------*\

    Root Styles

\*------------------------------------------------------------------------------------------------*/

// INUIT
// High-, page-level styling.

// I1. Set the default `font-size` and `line-height` for the entire project,
//    sourced from our default variables. The `font-size` is calculated to exist
//    in ems, the `line-height` is calculated to exist unitlessly.
// I2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
//    navigating between pages that do/do not have enough content to produce
//    scrollbars naturally.
// I3. Ensure the page always fills at least the entire height of the viewport.
// I4. Prevent certain mobile browsers from automatically zooming fonts.
// I5. Fonts on OSX will look more consistent with other systems that do not
//    render text using sub-pixel anti-aliasing.

// NORMALISE
// N1. Set default font family to sans-serif.
// N2. Prevent iOS and IE text size adjust after device orientation change,
//    without disabling user zoom.

html {
    //font-size: ($inuit-base-font-size / 16px) * 1em; // [I1]
    //line-height: $inuit-base-line-height / $inuit-base-font-size; // [I1]

    color: $fallback--base-text-color; // I, S
    background-color: $fallback--base-background-color; // I, S


    overflow-y: scroll; // [I2] S
    //min-height: 100%; //[I3]



    -moz-box-sizing: border-box; // S, Sc, I
         box-sizing: border-box; // S, Sc, I



    font-family: $fallback--base-font-family; //sans-serif; N1

    -webkit-text-size-adjust: 100%; // [I4] N2, S
        -ms-text-size-adjust: 100%; // [I4] N2
    -moz-osx-font-smoothing: grayscale; // [I5]
     -webkit-font-smoothing: antialiased; // [I5]

    text-rendering: optimizeLegibility; // S

    height: 100%;
}


* {
	font-size: inherit; // S
	line-height: inherit; // S
    margin:  0; // S
    padding: 0; // S
}

*,
::before,
::after {
    -moz-box-sizing: inherit; // S Sc I
         box-sizing: inherit; // S Sc I

    -webkit-font-smoothing: inherit; // Sc

    border-style: solid; // S
	border-width: 0; // S
}


::before,
::after {
	text-decoration: inherit; // S
	vertical-align: inherit; // S
}


body {
    font-size: ($fallback--base-font-size / 16px * 1em);
    line-height: ($fallback--base-line-height / 16px * 1rem);
    padding: ($fallback--base-line-height / 16px * 1rem);


    -height: 100%;
    min-height: 100%;
}


/*------------------------------------------------------------------------------------------------*\

    All Elements

\*------------------------------------------------------------------------------------------------*/


// [N1] Remove the gray background color from active links in IE 10.
a {
    background-color: transparent; // N1
    text-decoration: $anchor-text-decoration; // S

    // N: Improve readability of focused elements when they are also in an active/hover state.
    &:active,
    &:hover {
      outline: 0;
    }
}


abbr {
    cursor: help; // I

    // N: Address styling not present in IE 8/9/10/11, Safari, and Chrome.
    &[title] {
      border-bottom: 1px dotted;
    }
}

//--acronym {}--

address {
    margin-bottom: $fallback--base-rem-space-unit;
}

//--applet {}--
//!area {}

article {
	display: block;
}

aside {
	display: block;
}

audio {
    display: inline-block; // N: Correct `inline-block` display not defined in IE 8/9.
	vertical-align: $media-element-vertical-align; // S

    &:not([controls]) {
        display: none; // S: Chrome 44-, iOS 8+, Safari 9+
        height: 0; // N
    }
}

//b {}
//base {}
//--basefont {}--
//bdi {}
//bdo {}
//--bgsound {}
//--big {}--
//--blink {}--

blockquote {
    margin-bottom: $fallback--base-rem-space-unit;
}

//^body {}
//br {}

// [N0] Address inconsistent `text-transform` inheritance for `button`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// 2. Correct inability to style clickable `input` types in iOS.
// 3. Improve usability and consistency of cursor style between image-type
//    `input` and others.

button {
	overflow: visible; // S: Internet Explorer 11-
    background-color: $form-element-background-color; // S
    color: $form-button-color; // S
    //color: inherit; // S
	font-family: inherit; // S
	font-style: inherit; // S
	font-weight: inherit; // S
    min-height: $form-element-min-height; // S
    text-transform: none; // [N0]
    -webkit-appearance: button; // [N2]
    cursor: pointer; // [N3]
    
    padding: ($fallback--base-rem-space-unit / 8) $form-button-h-padding;
    margin: ($fallback--base-rem-space-unit / 8) 0;
    border-radius: $form-button-radius;

    // Remove inner padding and border in Firefox 4+.
    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }
    

}

canvas {
    display: inline-block;  // N: Correct `inline-block` display not defined in IE 8/9.
	vertical-align: $media-element-vertical-align;
}

caption {
	font-weight: bold;
    padding: $table-caption-padding;
}

//--center {}

cite {

}

code {
	font-family: $monospace-font-family, monospace; // S, N
    font-size: 1em; // N: Address odd `em`-unit font size rendering in all browsers.
    
    line-height: 1; // AK: Prevent the element increasing the line-height of the parent.
}

//!col {}
//!colgroup {}
//command {}
//content {}
//data {}
//datalist {}
//dd {}
//del {}

details {
	display: block; // N: IE 10/11
}

// N: Address styling not present in Safari and Chrome.
dfn {
	font-style: italic;
}

//dialog {}
//--dir {}--
//div {}

dl {
    margin-bottom: $fallback--base-rem-space-unit;
}

//dt {}
//element {}
//em {}
//embed {}

fieldset {
    border: $fieldset-border;
	padding: $fieldset-padding;
    margin-top: -$fieldset-border-size;
    @include calc(margin-bottom, '#{$fallback--base-rem-space-unit} - #{$fieldset-border-size}');
}

figcaption {
	display: block;
}

figure {
	display: block;
    margin-bottom: $fallback--base-rem-space-unit;
}

//--font {}--

footer {
	display: block;
}

form {
    margin-bottom: $fallback--base-rem-space-unit;
}

//--frame {}--
//--frameset {}--
//!head {}

header {
	display: block;
}

hgroup {
	display: block;
}

h1 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h1-font-size;
    line-height: $h1-height;
    font-variant: $h1-font-variant;
}

h2 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h2-font-size;
    line-height: $h2-height;
    font-variant: $h2-font-variant;
}

h3 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h3-font-size;
    line-height: $h3-height;
    font-variant: $h3-font-variant;
}

h4 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h4-font-size;
    line-height: $h4-height;
    font-variant: $h4-font-variant;
}

h5 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h5-font-size;
    line-height: $h5-height;
    font-variant: $h5-font-variant;
}

h6 {
    margin-bottom: $fallback--base-rem-space-unit;
    font-size: $h6-font-size;
    line-height: $h6-height;
    font-variant: $h6-font-variant;
}

hr {
	//box-sizing: content-box;
    //height: 0;
    height: 0;
    border-top: none;
    border-left: none;
    border-right: none;
    border-bottom: $hr-border;
    margin-bottom: $hr-margin;
}

//^html {}
//i {}

iframe {
    vertical-align: $media-element-vertical-align;
}

//--image {}--

// I1. Fluid images for responsive purposes.
// I2. Offset `alt` text from surrounding copy.
// I3. Setting `vertical-align` removes the whitespace that appears under `img` elements when they
//  are dropped into a page as-is. Safer alternative to using `display: block;`.
img {
	vertical-align: $media-element-vertical-align; // S, I3
    border: 0; // N: Remove border when inside `a` element in IE 8/9/10.
    max-width: 100%; // [I1]
    font-style: italic; // [I2]

    // I1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector to remove the
    // effects.
    // I2. If a `width` and/or `height` attribute have been explicitly defined, let’s not make the
    // image fluid.
    .gm-style &, // [I1]
    &[width], // [I2]
    &[height] {  // [I2]
        max-width: none;
    }
}

input {

}

//ins {}

//--isindex {}--

kbd {
	font-family: $monospace-font-family, monospace; // S, N
    font-size: 1em; // N: Address odd `em`-unit font size rendering in all browsers.
}

//keygen {}

label {
	font-weight: bold;
    cursor: pointer;
}

// N:
// 1. Correct `color` not being inherited in IE 8/9/10/11.
// 2. Remove padding so people aren't caught out if they zero out fieldsets.
legend {
  border: 0; // 1
  padding: 0; // 2
}

//li {}

//!link {}
//--listing {}--
// N: Correct `block` display not defined for `main` in IE 11.
main {
	display: block;
}

//!map {}

// N: Address styling not present in IE 8/9.
mark {
  background: #ff0;
  color: #000;
}

//--marquee {}--
//menu {}
//menuitem {}
//!meta {}
//meter {}
//--multicol {}--

nav {
	display: block; // N
}

//--nobr {}--
//--noembed {}--
//noframes {}
//noscript {}

object {
	vertical-align: $media-element-vertical-align;
}

ol {
    margin-bottom: $fallback--base-rem-space-unit;
}

optgroup {
	color: inherit; //  N, S
	font-family: inherit; //  N, S
	font-style: inherit; //  N, S

    // N: Don't inherit the `font-weight` (applied by a rule above).
    // NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
    font-weight: bold;
}

option {
	cursor: pointer; // Sc
}

//output {}

p {
    margin-bottom: $fallback--base-rem-space-unit;
}

//!param {}
//picture {}
//--plaintext {}--

pre {
    font-family: $monospace-font-family, monospace; // S, N
    font-size: 1em; // N: Address odd `em`-unit font size rendering in all browsers.
    overflow: auto; // N: Contain overflow in all browsers. S: Internet Explorer 11-
    margin-bottom: $fallback--base-rem-space-unit;
    background-color: $pre-background-color;
    
}

pre code {
    display: inline-block;
    line-height: 22px;
    padding:  $fallback--base-rem-space-unit / 2;
}

progress {
	display: inline-block; // S: Internet Explorer 11-, Windows Phone 8.1+
    vertical-align: $media-element-vertical-align; // N: Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
}

//q {}
//rp {}
//rt {}
//rtc {}
//ruby {}
//s {}

samp {
    font-family: $monospace-font-family, monospace; //* S, N
    font-size: 1em; // N: Address odd `em`-unit font size rendering in all browsers.
    
    line-height: 1; // AK: Prevent the element increasing the line-height of the parent.
}

//!script {}

section {
	display: block; // N
}


// N1: Address inconsistent `text-transform` inheritance for `select`.
// All other form control elements do not inherit `text-transform` values.
//  Correct `select` style inheritance in Firefox.
select {
	cursor: pointer; // Sc
    background-color: $form-element-background-color; // S
    color: inherit; // S
	font-family: inherit; // S
	font-style: inherit; // S
	font-weight: inherit; // S
	min-height: $form-element-min-height; // S

    text-transform: none; // N1

    // S:
    -moz-appearance: none;    // Firefox 40+
	-webkit-appearance: none; // Chrome 45+

	&::-ms-expand {
		display: none;        // Edge 12+, Internet Explorer 11-
	}

	&::-ms-value {
		color: currentColor;  // Edge 12+, Internet Explorer 11-
	}
}

//shadow {}

small {
	font-size: $small-font-size; // All browsers
}

//!source {}
//--spacer {}--
//span {}
//--strike {}--
//strong {}
//!style {}

//
// N: Prevent `sub` affecting `line-height` in all browsers.
//
sub {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
    bottom: -0.25em;
}

summary {
    // S: Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+
    // N: Correct `block` display not defined for `details` or `summary` in IE 10/11
	display: block;
}

// N: Prevent `sup` affecting `line-height` in all browsers.
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
    top: -0.5em;
}

svg {
    // H, S
    vertical-align: $media-element-vertical-align;
}
    // N: Correct overflow not hidden in IE 9/10/11.
    svg:not(:root) {
      overflow: hidden;
    }

table {
	//margin-bottom: $fallback--base-rem-space-unit;
    border-collapse: collapse; // N
    border-spacing: 0; // N

    border: $table-border;
    margin-top: -$table-border-size;
    //margin-bottom: calc(#{$fallback--base-rem-space-unit} - #{$table-border-size});
    @include calc(margin-bottom, '#{$fallback--base-rem-space-unit} - #{$table-border-size}');
}

//tbody {}
td {
    border: $table-border;
    padding-top: $table-cell-padding;
    padding-right: $table-cell-padding;
    @include calc(padding-bottom, '#{$table-cell-padding} - #{$table-border-size}');
    padding-left: $table-cell-padding;
}

template {
    // S: Android 4.3-, Internet Explorer 11-, iOS 7-, Safari 7-, Windows Phone 8.1+
    // N: Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
    display: none;
}

textarea {
    background-color: $form-element-background-color; // S
    color: inherit; // N, S
	font-family: inherit; // N, S
	font-style: inherit; // N, S
	font-weight: inherit; // N, S
    min-height: $form-element-min-height; //S
    resize: $textarea-resize; // S
    overflow: auto; // N, S: Edge 12+, Internet Explorer 11-
}

//tfoot {}

th {
    border: $table-border;
    padding-top: $table-cell-padding;
    padding-right: $table-cell-padding;
    @include calc(padding-bottom, '#{$table-cell-padding} - #{$table-border-size}');
    padding-left: $table-cell-padding;
}


//thead {}
//time {}
//!title {}
//tr {}
//!track {}
//--tt {}--
//u {}

ul {
    margin-bottom: $fallback--base-rem-space-unit;
}

//var {}

video {
    display: inline-block;  // N: Correct `inline-block` display not defined in IE 8/9.
	vertical-align: $media-element-vertical-align;
    max-width: 100%; // Sc
    height: auto; // Sc
    background-color: $video-background-color;
    width: 100%;
}

//wbr {}
//--xmp {}--


/*------------------------------------------------------------------------------------------------*\

    Accessibility / ARIA

\*------------------------------------------------------------------------------------------------*/

[aria-busy="true"] {
	cursor: progress;
}

// S: specify the pointer cursor of trigger elements

[aria-controls] {
	cursor: pointer;
}

// S: specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements
[disabled],
[aria-disabled] {
	cursor: default;
}


// N: Address `[hidden]` styling not present in IE 8/9/10.
[hidden] {
	display: none; // S: Internet Explorer 10-
}

// S: specify the style of visually hidden yet accessible elements

[hidden][aria-hidden="false"] {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;

	&:focus,
	&:active {
        clip: auto;
        height: auto;
        margin: 0;
        overflow: visible;
        position: static;
        width: auto;
	}
}


/*------------------------------------------------------------------------------------------------*\

    Utilities

\*------------------------------------------------------------------------------------------------*/

// H: Clearfix: contain floats for modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    `contenteditable` attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that receive the `clearfix` class.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.


.clearfix:before,
.clearfix:after {
    content: " "; // 1
    display: table; // 2
}

.clearfix:after {
    clear: both;
}


.no-css-only {
    display: none;
}
